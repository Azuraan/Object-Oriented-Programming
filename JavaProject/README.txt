README:

Εντολή μεταγλώττισης: Την μεταγλώτισση πέρα απο το Netbeans, την έκανα και στο terminal των linux της σχολής.cd στο path μεχρι να μπούμε στο directory TrithAskhsh, έπειτα
javac *.java .Μετά cd .. για να πάμε στο directory που περιέχει την TrithAskhsh και μετά την εντολή java TrithAskhsh.Ergasia3. Αυτά είναι τα βήματα που ακολούθησα εγώ.

Πληροφορίες και Αιτιολογήσεις σχετικά με τις σχεδιαστικές μου επιλογές: H main εκτελεί όλες τις λειτουργίες που αναφέρει η εκφώνηση.Έχω υλοποιήσει κάθε κλάση του προγράμματος
σε διαφορετικό .java αρχειο μέσα σε ενα package διότι ένα .java μπορεί να έχει το πολυ μία public κλάση και επιθυμώ να τις έχω όλες διαθέσιμες προς χρήση. Την κλάση Employee
και την κλάση PlaneComponent ως abstract αφού μας ενδιαφέρουν οι πιο εξειδικεύμενοι ορισμοί των μεθόδων των υποκλάσεων τους. Όσο για τις process των PlaneComponent υποκλάσεων,
κάθε μια απο αυτές καλεί την workOn του Employee που της εχει δωθεί σαν όρισμα. Οι toString συναρτήσεις δημιουργούν ένα String αρχικά και έπειτα βηματικά κάνουν concat αυτό το
String μαζί με το καινούριο που περνάμε σαν παράμετρο και έπειτα αφού δεν μπορόυμε να μεταβάλουμε τα περιεχόμενα του String εκχωρούμε στην αρχική μεταβλητή τύπου String την String
που επιστρέφει η concat. Ορίζω εσωτερικό χώρο εξοπλισμού μέσα στην κλάση CargoBay και στην PassengerCompartment τον πιθανό εσωτερικό χώρο επιβατών τον υλοποιώ ορίζοντας μεταβλητή
τύπου PassengerCompartment η οποία είναι null οταν δεν υπάρχει εσωτερικός χώρος αλλιώς παίρνει την τιμή ενός νέου PassengerCompartment με πιθανότητα να γίνει το τελευταίο ίση με 1/5.
Όσον αφορά την Plane, ο constructor της δημιουργεί πίνακες για τους χώρους εξοπλισμού και επιβατών και έπειτα τους εκχωρεί τους αντίστοιχους χώρους που δημιουργούνται με την new.
Το πλήθος των χώρων επιβατών τον αποφασίζω με μια Random μεταβλητή που καλεί την μέθοδο nextInt() με όρισμα το capasity με αποτέσμα να επιστρέφει ακέραιο στο δίαστημα 
[0,capasity-1] τον οποίο έπειτα διαιρώ δια 4 και προσθέτω δύο στο υπόλοιπο της διαίρεσης με αποτέλεσμα να παίρνω έναν ακέραιο αριθμό στο δίαστημα [2,5] το οποίο προσωπικά μου
φαίνεται λογικός και ρεαλιστικός αριθμός χώρων επιβατών για ένα συνηθισμένο αεροπλάνο. Μετα το τελευταίο στοιχείο του πίνακα με τους χώρους επιβατών του αεροπλάνου, η θέση περίεχει 
την τιμή null προκειμένου να μπορώ να χειριστώ τον πίνακα (χώρις να ξέρω το μέγεθος του) σε αλλες συναρτήσεις. Η ready_check και η toString της Plane καλούν με ανάλογο τρόπο τις
αντίστοιχες συναρτήσεις των στοιχείων της.